import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;


public class newBot {

	private Word word = new Word();
	private String letters;
	
	newBot () {
		word.setWord(0, 0, Word.HORIZONTAL, "HELLO");
		letters = "XYZ";
	}
	
	public int getCommand (Player player, Board board, Dictionary dictionary, Frame frame) throws FileNotFoundException {
		long start = System.currentTimeMillis();
		ArrayList<String> permList = new ArrayList<String>();
		String frameString ="";
		for(int i=0;i<frame.size();i++){
			frameString = frameString + frame.getTile(i).getFace();
		}
		//System.out.println(frameString);
		for(int iCoordinate=0;iCoordinate<15;iCoordinate++){
			for(int jCoordinate=0;jCoordinate<15;jCoordinate++){
				if((board.isFirstPlay()) || (board.isRowEmpty(jCoordinate))){
					Set<String> s = newBot.generatePerm(frameString);
					String perms = s.toString();
					String[] overallArray = perms.split(", ");
					overallArray[0] = overallArray[0].substring(1);
					overallArray[overallArray.length-1] = overallArray[overallArray.length-1].replaceAll("]", "");
					for(int i=0;i<overallArray.length-1;i++){
						permList.add(overallArray[i]);
					}
				
					int x=0;
					while(x<7){
						//System.out.println("X CHANGE");
						for(int i=0;i<overallArray.length-1;i++){
							int w = permList.size()-1;
							if(overallArray[i].substring(x).length()>1){
								permList.add(overallArray[i].substring(x));
							}
							//System.out.println(permList.get(w));
							//System.out.println("permListSize: " + permList.size()+"\n");
						}
						x++;
					}
					
				}
				else{
					for(int z=0;z<15;z++){
						if(board.getSqContents(iCoordinate, z)!= ' '){
							frameString = frameString + board.getSqContents(iCoordinate, z);
						}
					}
				}
				
				ArrayList<String> dictionaryPasser = new ArrayList<String>();
				for(int i=0;i<permList.size()-1;i++){
				//	ArrayList<String> prevDictionaryPasser = new ArrayList<String>();
					//prevDictionaryPasser = dictionaryPasser;
					dictionaryPasser.add(permList.get(i));
					//System.out.println(dictionaryPasser.size());
					//System.out.println(dictionaryPasser.get(dictionaryPasser.size()-1));
					if(!dictionary.areWords(dictionaryPasser)){
						dictionaryPasser.remove(permList.get(i));
						//System.out.println(dictionaryPasser.size());
					}
					else{
						//System.out.println("WordAccepted");
						//System.out.println("SIZE: " + Integer.toString(dictionaryPasser.size()-1));
					}
				}
				/*for (int i = 0; i < dictionaryPasser.size(); i++) {
				    String value = dictionaryPasser.get(i);
				    System.out.println("Element: " + value);
				}*/
				long end = System.currentTimeMillis();
				System.out.println(dictionaryPasser.size());
				System.out.println(end-start);
			}
		}
		
		return(UI.COMMAND_PASS);	
		
		
		// make a decision on the play here
				// use board.getSqContents to check what is on the board
				// use Board.SQ_VALUE to check the multipliers
				// use frame.getAllTiles to check what letters you have
				// return the corresponding commandCode from UI
				// if a play, put the start position and letters into word
				// if an exchange, put the characters into letters
		}
	public Word getWord () {
		// should not change
		return(word);
	}
		
	public String getLetters () {
		// should not change
		return(letters);
	}
	public static Set<String> generatePerm(String input)
	{
	    Set<String> set = new HashSet<String>();
	    if (input == "")
	        return set;

	    Character a = input.charAt(0);

	    if (input.length() > 1)
	    {
	        input = input.substring(1);

	        Set<String> permSet = generatePerm(input);

	        for (String x : permSet)
	        {
	            for (int i = 0; i <= x.length(); i++)
	            {
	                set.add(x.substring(0, i) + a + x.substring(i));
	            }
	        }
	    }
	    else
	    {
	        set.add(a + "");
	    }
	    return set;
	}
}